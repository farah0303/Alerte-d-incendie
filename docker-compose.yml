version: "3.8"
services:
  orion:
    labels:
      org.fiware: 'tutorial'
    image: fiware/orion:${ORION_VERSION:-3.3.0}
    hostname: orion
    container_name: fiware-orion
    depends_on:
      - mongo-db
    networks:
      - default
    ports:
      - "${ORION_PORT:-1026}:${ORION_PORT:-1026}"
    command: -dbhost mongo-db -logLevel DEBUG -noCache
    healthcheck:
      test: curl --fail -s http://orion:${ORION_PORT:-1026}/version || exit 1
      interval: 5s


  mongo-db:
    labels:
      org.fiware: 'tutorial'
    image: mongo:${MONGO_DB_VERSION:-6.0}
    hostname: mongo-db
    container_name: db-mongo
    expose:
      - "${MONGO_DB_PORT:-27017}"
    ports:
      - "${MONGO_DB_PORT:-27017}:${MONGO_DB_PORT:-27017}"
    networks:
      - default
    volumes:
      - mongo-db:/data
    healthcheck:
      test: |
        host=`hostname --ip-address || echo '127.0.0.1'`; 
        mongo --quiet $host/test --eval 'quit(db.runCommand({ ping: 1 }).ok ? 0 : 2)' && echo 0 || echo 1
      interval: 5s
  flask-app:
    build: ./flask_app
    container_name: flask-app
    ports:
      - "5000:5000"
    depends_on:
      - orion
    networks:
      - default
    environment:
      - FLASK_ENV=development
    restart: on-failure:5
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/sync"]
      interval: 10s
      timeout: 5s
      retries: 5
  sensor-simulation:
    build: .
    container_name: sensor-simulation
    depends_on:
      - orion
      - flask-app
    networks:
      - default
    environment:
      - ORION_URL=http://orion:1026/v2/op/update
      - FLASK_ALERT_URL=http://flask-app:5000/alert
    restart: always
networks:
  default:
    labels:
      org.fiware: 'tutorial'
    ipam:
      config:
        - subnet: 172.19.0.0/24

volumes:
  mongo-db: ~
